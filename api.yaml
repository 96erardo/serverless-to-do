openapi: 3.0.0

info:
  title: Serverless To Do
  description: A serverless API made with aws services and destined to register user pending/done activities 
  version: 0.0.1

x-amazon-apigateway-request-validators:
  all:
    validateRequestBody: true
    validateRequestParameters: true
  params-only:
    validateRequestBody: false
    validateRequestParameters: true

paths:
  /todos:
    post:
      summary: Creates a new To Do.
      x-amazon-apigateway-request-validator: "all"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                description:
                  type: string
              required:
                - title
                - description
      responses:
        "201":
          description: The created To Do.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ToDo"
      x-amazon-apigateway-integration:
        type: aws_proxy
        httpMethod: "POST"
        uri: 
          arn:${AWS::Partition}:apigateway:${AWS::Region}:lambda:path//2015-03-31/functions/arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:CreateToDoFunction/invocations
        credentials:
          arn:${AWS::Partition}:iam::${AWS::AccountId}:role/ApiGatewayDefaultRole
        passthroughBehaviour: "when_no_match"
        # payloadFormatVersion: 2.0
  /todos/{id}:
    get:
      summary: Returns the To Do with the specified id.
      x-amazon-apigateway-request-validator: "params-only"
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
            minimum: 1
      responses:
        "200":
          description: The To Do record.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ToDo"
      x-amazon-apigateway-integration:
        type: aws_proxy
        httpMethod: "POST"
        uri: 
          arn:${AWS::Partition}:apigateway:${AWS::Region}:lambda:path//2015-03-31/functions/arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:ReadToDoFunction/invocations
        credentials:
          arn:${AWS::Partition}:iam::${AWS::AccountId}:role/ApiGatewayDefaultRole
        passthroughBehaviour: "when_no_match"
        # payloadFormatVersion: 2.0
        
        responses:
          default:
            statusCode: "200"
components:
  schemas:
    ToDo:
      type: object
      properties:
        id:
          type: integer
        title:
          type: string
        description:
          type: string
        done:
          type: boolean